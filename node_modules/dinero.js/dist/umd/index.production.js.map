{"version":3,"file":"index.production.js","sources":["../../../core/dist/esm/checks/messages.js","../../../core/dist/esm/types/Calculator.js","../../../core/dist/esm/helpers/assert.js","../../../core/dist/esm/helpers/createDinero.js","../../../core/dist/esm/utils/equal.js","../../../core/dist/esm/utils/greaterThan.js","../../../core/dist/esm/utils/greaterThanOrEqual.js","../../../core/dist/esm/utils/lessThan.js","../../../core/dist/esm/utils/distribute.js","../../../core/dist/esm/utils/getAmountAndScale.js","../../../core/dist/esm/utils/isScaledAmount.js","../../../core/dist/esm/utils/isEven.js","../../../core/dist/esm/utils/isHalf.js","../../../core/dist/esm/utils/maximum.js","../../../core/dist/esm/api/haveSameCurrency.js","../../../core/dist/esm/api/transformScale.js","../../../core/dist/esm/api/normalizeScale.js","../../../core/dist/esm/api/add.js","../../../core/dist/esm/api/allocate.js","../../../core/dist/esm/api/compare.js","../../../core/dist/esm/utils/compare.js","../../../core/dist/esm/api/convert.js","../../../core/dist/esm/api/haveSameAmount.js","../../../core/dist/esm/api/equal.js","../../../core/dist/esm/api/greaterThan.js","../../../core/dist/esm/api/greaterThanOrEqual.js","../../../core/dist/esm/api/hasSubUnits.js","../../../core/dist/esm/api/isNegative.js","../../../core/dist/esm/api/isPositive.js","../../../core/dist/esm/api/isZero.js","../../../core/dist/esm/api/lessThan.js","../../../core/dist/esm/api/lessThanOrEqual.js","../../../core/dist/esm/utils/lessThanOrEqual.js","../../../core/dist/esm/api/maximum.js","../../../core/dist/esm/api/minimum.js","../../../core/dist/esm/utils/minimum.js","../../../core/dist/esm/api/multiply.js","../../../core/dist/esm/api/subtract.js","../../../core/dist/esm/api/toUnit.js","../../../core/dist/esm/api/toFormat.js","../../../core/dist/esm/api/trimScale.js","../../../core/dist/esm/utils/countTrailingZeros.js","../../src/api/haveSameCurrency.ts","../../src/api/toSnapshot.ts","../../../core/dist/esm/api/toSnapshot.js","../../../calculator-number/dist/esm/calculator.js","../../src/dinero.ts","../../../calculator-number/dist/esm/api/add.js","../../../calculator-number/dist/esm/api/compare.js","../../../calculator-number/dist/esm/api/decrement.js","../../../calculator-number/dist/esm/api/increment.js","../../../calculator-number/dist/esm/api/integerDivide.js","../../../calculator-number/dist/esm/api/modulo.js","../../../calculator-number/dist/esm/api/multiply.js","../../../calculator-number/dist/esm/api/power.js","../../../calculator-number/dist/esm/api/subtract.js","../../../calculator-number/dist/esm/api/toNumber.js","../../../calculator-number/dist/esm/api/zero.js","../../src/api/add.ts","../../src/api/allocate.ts","../../src/api/compare.ts","../../src/api/convert.ts","../../../core/dist/esm/round/down.js","../../src/api/equal.ts","../../src/api/greaterThan.ts","../../src/api/greaterThanOrEqual.ts","../../../core/dist/esm/round/halfAwayFromZero.js","../../../core/dist/esm/round/halfDown.js","../../../core/dist/esm/round/halfEven.js","../../../core/dist/esm/round/halfOdd.js","../../../core/dist/esm/round/halfTowardsZero.js","../../../core/dist/esm/round/halfUp.js","../../src/api/hasSubUnits.ts","../../src/api/haveSameAmount.ts","../../src/api/isNegative.ts","../../src/api/isPositive.ts","../../src/api/isZero.ts","../../src/api/lessThan.ts","../../src/api/lessThanOrEqual.ts","../../src/api/maximum.ts","../../src/api/minimum.ts","../../src/api/multiply.ts","../../src/api/normalizeScale.ts","../../src/api/subtract.ts","../../src/api/toFormat.ts","../../src/api/toUnit.ts","../../src/api/transformScale.ts","../../src/api/trimScale.ts","../../../core/dist/esm/round/up.js"],"sourcesContent":["export var INVALID_AMOUNT_MESSAGE = 'Amount is invalid.';\nexport var INVALID_SCALE_MESSAGE = 'Scale is invalid.';\nexport var INVALID_RATIOS_MESSAGE = 'Ratios are invalid.';\nexport var UNEQUAL_SCALES_MESSAGE = 'Objects must have the same scale.';\nexport var UNEQUAL_CURRENCIES_MESSAGE = 'Objects must have the same currency.';","/* eslint-disable functional/no-mixed-type */\nexport var ComparisonOperator;\n\n(function (ComparisonOperator) {\n  ComparisonOperator[ComparisonOperator[\"LT\"] = -1] = \"LT\";\n  ComparisonOperator[ComparisonOperator[\"EQ\"] = 0] = \"EQ\";\n  ComparisonOperator[ComparisonOperator[\"GT\"] = 1] = \"GT\";\n})(ComparisonOperator || (ComparisonOperator = {}));","/* eslint-disable functional/no-throw-statement, valid-jsdoc */\n\n/**\n * Assert a condition.\n *\n * @param condition - The condition to verify.\n * @param message - The error message to throw.\n *\n * @throws If the condition isn't met.\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[Dinero.js] \".concat(message));\n  }\n}","/* eslint-disable functional/no-mixed-type, functional/no-return-void, functional/no-expression-statement */\nexport function createDinero(_ref) {\n  var calculator = _ref.calculator,\n      onCreate = _ref.onCreate;\n  return function dinero(_ref2) {\n    var amount = _ref2.amount,\n        currency = _ref2.currency,\n        _ref2$scale = _ref2.scale,\n        scale = _ref2$scale === void 0 ? currency.exponent : _ref2$scale;\n    onCreate === null || onCreate === void 0 ? void 0 : onCreate({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n    return {\n      calculator: calculator,\n      create: dinero,\n      toJSON: function toJSON() {\n        return {\n          amount: amount,\n          currency: currency,\n          scale: scale\n        };\n      }\n    };\n  };\n}","import { ComparisonOperator } from '../types';\n\n/**\n * Returns an equal function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The equal function.\n */\nexport function equal(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.EQ;\n  };\n}","import { ComparisonOperator } from '../types';\n\n/**\n * Returns a greaterThan function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The greaterThan function.\n */\nexport function greaterThan(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.GT;\n  };\n}","import { equal } from './equal';\nimport { greaterThan } from './greaterThan';\n\n/**\n * Returns a greaterThanOrEqual function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The greaterThanOrEqual function.\n */\nexport function greaterThanOrEqual(calculator) {\n  return function (subject, comparator) {\n    return greaterThan(calculator)(subject, comparator) || equal(calculator)(subject, comparator);\n  };\n}","import { ComparisonOperator } from '../types';\n\n/**\n * Returns a lessThan function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The lessThan function.\n */\nexport function lessThan(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.LT;\n  };\n}","/* eslint-disable functional/no-let, functional/no-loop-statement, functional/immutable-data, functional/no-expression-statement */\nimport { equal } from './equal';\nimport { greaterThan } from './greaterThan';\nimport { greaterThanOrEqual } from './greaterThanOrEqual';\nimport { lessThan } from './lessThan';\n\n/**\n * Returns a distribute function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The distribute function.\n */\nexport function distribute(calculator) {\n  return function (value, ratios) {\n    var equalFn = equal(calculator);\n    var greaterThanFn = greaterThan(calculator);\n    var lessThanFn = lessThan(calculator);\n    var greaterThanOrEqualFn = greaterThanOrEqual(calculator);\n    var zero = calculator.zero();\n    var one = calculator.increment(zero);\n    var total = ratios.reduce(function (a, b) {\n      return calculator.add(a, b);\n    }, zero);\n\n    if (equalFn(total, zero)) {\n      return ratios;\n    }\n\n    var remainder = value;\n    var shares = ratios.map(function (ratio) {\n      var share = calculator.integerDivide(calculator.multiply(value, ratio), total) || zero;\n      remainder = calculator.subtract(remainder, share);\n      return share;\n    });\n    var isPositive = greaterThanOrEqualFn(value, zero);\n    var compare = isPositive ? greaterThanFn : lessThanFn;\n    var amount = isPositive ? one : calculator.decrement(zero);\n    var i = 0;\n\n    while (compare(remainder, zero)) {\n      if (!equalFn(ratios[i], zero)) {\n        shares[i] = calculator.add(shares[i], amount);\n        remainder = calculator.subtract(remainder, amount);\n      }\n\n      i++;\n    }\n\n    return shares;\n  };\n}","import { isScaledAmount } from './isScaledAmount';\nexport function getAmountAndScale(value, zero) {\n  if (isScaledAmount(value)) {\n    var _value$scale;\n\n    return {\n      amount: value.amount,\n      scale: (_value$scale = value === null || value === void 0 ? void 0 : value.scale) !== null && _value$scale !== void 0 ? _value$scale : zero\n    };\n  }\n\n  return {\n    amount: value,\n    scale: zero\n  };\n}","export function isScaledAmount(amount) {\n  return amount === null || amount === void 0 ? void 0 : amount.hasOwnProperty('amount');\n}","/**\n * Return whether a number is even.\n *\n * @param value - The number to test.\n *\n * @returns Whether the number is even.\n */\nexport function isEven(value) {\n  return value % 2 === 0;\n}","/**\n * Return whether a number is half.\n *\n * @param value - The number to test.\n *\n * @returns Whether the number is half.\n */\nexport function isHalf(value) {\n  return Math.abs(value) % 1 === 0.5;\n}","import { lessThan } from './lessThan';\n\n/**\n * Returns a maximum function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The maximum function.\n */\nexport function maximum(calculator) {\n  var lessThanFn = lessThan(calculator);\n  return function (values) {\n    return values.reduce(function (acc, curr) {\n      return lessThanFn(acc, curr) ? curr : acc;\n    });\n  };\n}","function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { equal } from '../utils';\nexport function haveSameCurrency(dineroObjects) {\n  var _dineroObjects = _toArray(dineroObjects),\n      firstDinero = _dineroObjects[0],\n      otherDineros = _dineroObjects.slice(1);\n\n  var _firstDinero$toJSON = firstDinero.toJSON(),\n      comparator = _firstDinero$toJSON.currency;\n\n  var equalFn = equal(firstDinero.calculator);\n  return otherDineros.every(function (d) {\n    var _d$toJSON = d.toJSON(),\n        subject = _d$toJSON.currency;\n\n    return subject.code === comparator.code && equalFn(subject.base, comparator.base) && equalFn(subject.exponent, comparator.exponent);\n  });\n}","import { greaterThan } from '../utils';\nexport function transformScale(calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  return function transformScaleFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        newScale = _ref[1];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    var isNewScaleLarger = greaterThanFn(newScale, scale);\n    var operation = isNewScaleLarger ? calculator.multiply : calculator.integerDivide;\n    var terms = isNewScaleLarger ? [newScale, scale] : [scale, newScale];\n    var factor = calculator.power(currency.base, calculator.subtract.apply(calculator, terms));\n    return dineroObject.create({\n      amount: operation(amount, factor),\n      currency: currency,\n      scale: newScale\n    });\n  };\n}","import { equal, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function normalizeScale(calculator) {\n  var maximumFn = maximum(calculator);\n  var convertScaleFn = transformScale(calculator);\n  var equalFn = equal(calculator);\n  return function _normalizeScale() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObjects = _ref[0];\n    var highestScale = dineroObjects.reduce(function (highest, current) {\n      var _current$toJSON = current.toJSON(),\n          scale = _current$toJSON.scale;\n\n      return maximumFn([highest, scale]);\n    }, calculator.zero());\n    return dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          scale = _d$toJSON.scale;\n\n      return !equalFn(scale, highestScale) ? convertScaleFn(d, highestScale) : d;\n    });\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeAdd(calculator) {\n  return function add() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var augend = _ref[0],\n        addend = _ref[1];\n\n    var _augend$toJSON = augend.toJSON(),\n        augendAmount = _augend$toJSON.amount,\n        currency = _augend$toJSON.currency,\n        scale = _augend$toJSON.scale;\n\n    var _addend$toJSON = addend.toJSON(),\n        addendAmount = _addend$toJSON.amount;\n\n    var amount = calculator.add(augendAmount, addendAmount);\n    return augend.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\n\nexport function safeAdd(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var addFn = unsafeAdd(calculator);\n  return function add() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var augend = _ref2[0],\n        addend = _ref2[1];\n    var condition = haveSameCurrency([augend, addend]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([augend, addend]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        newAugend = _normalizeFn2[0],\n        newAddend = _normalizeFn2[1];\n\n    return addFn(newAugend, newAddend);\n  };\n}","/* eslint-disable functional/no-expression-statement */\nimport { INVALID_RATIOS_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { distribute, equal, getAmountAndScale, greaterThan, greaterThanOrEqual, maximum } from '../utils';\nimport { transformScale } from './transformScale';\n\nfunction unsafeAllocate(calculator) {\n  return function allocate() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        ratios = _ref[1];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    var distributeFn = distribute(calculator);\n    var shares = distributeFn(amount, ratios.map(function (ratio) {\n      return ratio.amount;\n    }));\n    return shares.map(function (share) {\n      return dineroObject.create({\n        amount: share,\n        currency: currency,\n        scale: scale\n      });\n    });\n  };\n}\n\nexport function safeAllocate(calculator) {\n  var allocateFn = unsafeAllocate(calculator);\n  var greaterThanOrEqualFn = greaterThanOrEqual(calculator);\n  var greaterThanFn = greaterThan(calculator);\n  var convertScaleFn = transformScale(calculator);\n  var maximumFn = maximum(calculator);\n  var equalFn = equal(calculator);\n  var zero = calculator.zero();\n  var ten = new Array(10).fill(null).reduce(calculator.increment, zero);\n  return function allocate() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        ratios = _ref2[1];\n    var hasRatios = ratios.length > 0;\n    var scaledRatios = ratios.map(function (ratio) {\n      return getAmountAndScale(ratio, zero);\n    });\n    var highestRatioScale = hasRatios ? maximumFn(scaledRatios.map(function (_ref3) {\n      var scale = _ref3.scale;\n      return scale;\n    })) : zero;\n    var normalizedRatios = scaledRatios.map(function (_ref4) {\n      var amount = _ref4.amount,\n          scale = _ref4.scale;\n      var factor = equalFn(scale, highestRatioScale) ? zero : calculator.subtract(highestRatioScale, scale);\n      return {\n        amount: calculator.multiply(amount, calculator.power(ten, factor)),\n        scale: scale\n      };\n    });\n    var hasOnlyPositiveRatios = normalizedRatios.every(function (_ref5) {\n      var amount = _ref5.amount;\n      return greaterThanOrEqualFn(amount, zero);\n    });\n    var hasOneNonZeroRatio = normalizedRatios.some(function (_ref6) {\n      var amount = _ref6.amount;\n      return greaterThanFn(amount, zero);\n    });\n    var condition = hasRatios && hasOnlyPositiveRatios && hasOneNonZeroRatio;\n    assert(condition, INVALID_RATIOS_MESSAGE);\n\n    var _dineroObject$toJSON2 = dineroObject.toJSON(),\n        scale = _dineroObject$toJSON2.scale;\n\n    var newScale = calculator.add(scale, highestRatioScale);\n    return allocateFn(convertScaleFn(dineroObject, newScale), normalizedRatios);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { compare as cmp } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeCompare(calculator) {\n  var compareFn = cmp(calculator);\n  return function compare() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n\n      return amount;\n    }),\n        _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n        subjectAmount = _dineroObjects$map2[0],\n        comparatorAmount = _dineroObjects$map2[1];\n\n    return compareFn(subjectAmount, comparatorAmount);\n  };\n}\n\nexport function safeCompare(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var compareFn = unsafeCompare(calculator);\n  return function compare() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        subjectAmount = _normalizeFn2[0],\n        comparatorAmount = _normalizeFn2[1];\n\n    return compareFn(subjectAmount, comparatorAmount);\n  };\n}","/**\n * Returns a compare function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The compare function.\n */\nexport function compare(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator);\n  };\n}","import { getAmountAndScale, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function convert(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var maximumFn = maximum(calculator);\n  var zero = calculator.zero();\n  return function convertFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        newCurrency = _ref[1],\n        rates = _ref[2];\n    var rate = rates[newCurrency.code];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        scale = _dineroObject$toJSON.scale;\n\n    var _getAmountAndScale = getAmountAndScale(rate, zero),\n        rateAmount = _getAmountAndScale.amount,\n        rateScale = _getAmountAndScale.scale;\n\n    var newScale = calculator.add(scale, rateScale);\n    return convertScaleFn(dineroObject.create({\n      amount: calculator.multiply(amount, rateAmount),\n      currency: newCurrency,\n      scale: newScale\n    }), maximumFn([newScale, newCurrency.exponent]));\n  };\n}","function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { equal } from '../utils';\nimport { normalizeScale } from './normalizeScale';\nexport function haveSameAmount(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var equalFn = equal(calculator);\n  return function _haveSameAmount() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObjects = _ref[0];\n\n    var _normalizeFn = normalizeFn(dineroObjects),\n        _normalizeFn2 = _toArray(_normalizeFn),\n        firstDinero = _normalizeFn2[0],\n        otherDineros = _normalizeFn2.slice(1);\n\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n        comparatorAmount = _firstDinero$toJSON.amount;\n\n    return otherDineros.every(function (d) {\n      var _d$toJSON = d.toJSON(),\n          subjectAmount = _d$toJSON.amount;\n\n      return equalFn(subjectAmount, comparatorAmount);\n    });\n  };\n}","import { haveSameAmount } from './haveSameAmount';\nimport { haveSameCurrency } from './haveSameCurrency';\nexport function equal(calculator) {\n  return function _equal() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    return haveSameAmount(calculator)([dineroObject, comparator]) && haveSameCurrency([dineroObject, comparator]);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { greaterThan as gt } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeGreaterThan(calculator) {\n  var greaterThanFn = gt(calculator);\n  return function greaterThan() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n\n      return amount;\n    }),\n        _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n        subjectAmount = _dineroObjects$map2[0],\n        comparatorAmount = _dineroObjects$map2[1];\n\n    return greaterThanFn(subjectAmount, comparatorAmount);\n  };\n}\n\nexport function safeGreaterThan(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var greaterThanFn = unsafeGreaterThan(calculator);\n  return function greaterThan() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        subjectAmount = _normalizeFn2[0],\n        comparatorAmount = _normalizeFn2[1];\n\n    return greaterThanFn(subjectAmount, comparatorAmount);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { greaterThanOrEqual as gte } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeGreaterThanOrEqual(calculator) {\n  var greaterThanOrEqualFn = gte(calculator);\n  return function greaterThanOrEqual() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n\n      return amount;\n    }),\n        _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n        subjectAmount = _dineroObjects$map2[0],\n        comparatorAmount = _dineroObjects$map2[1];\n\n    return greaterThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}\n\nexport function safeGreaterThanOrEqual(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var greaterThanOrEqualFn = unsafeGreaterThanOrEqual(calculator);\n  return function greaterThanOrEqual() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        subjectAmount = _normalizeFn2[0],\n        comparatorAmount = _normalizeFn2[1];\n\n    return greaterThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}","import { equal } from '../utils';\nexport function hasSubUnits(calculator) {\n  var equalFn = equal(calculator);\n  return function _hasSubUnits() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    return !equalFn(calculator.modulo(amount, calculator.power(currency.base, scale)), calculator.zero());\n  };\n}","import { lessThan } from '../utils';\nexport function isNegative(calculator) {\n  var lessThanFn = lessThan(calculator);\n  return function _isNegative() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount;\n\n    return lessThanFn(amount, calculator.zero());\n  };\n}","import { greaterThanOrEqual } from '../utils';\nexport function isPositive(calculator) {\n  var greaterThanOrEqualFn = greaterThanOrEqual(calculator);\n  return function _isPositive() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount;\n\n    return greaterThanOrEqualFn(amount, calculator.zero());\n  };\n}","import { equal } from '../utils';\nexport function isZero(calculator) {\n  var equalFn = equal(calculator);\n  return function _isZero() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount;\n\n    return equalFn(amount, calculator.zero());\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { lessThan as lt } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeLessThan(calculator) {\n  var lessThanFn = lt(calculator);\n  return function lessThan() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n\n      return amount;\n    }),\n        _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n        subjectAmount = _dineroObjects$map2[0],\n        comparatorAmount = _dineroObjects$map2[1];\n\n    return lessThanFn(subjectAmount, comparatorAmount);\n  };\n}\n\nexport function safeLessThan(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var lessThanFn = unsafeLessThan(calculator);\n  return function lessThan() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        subjectAmount = _normalizeFn2[0],\n        comparatorAmount = _normalizeFn2[1];\n\n    return lessThanFn(subjectAmount, comparatorAmount);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { lessThanOrEqual as lte } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeLessThanOrEqual(calculator) {\n  var lessThanOrEqualFn = lte(calculator);\n  return function lessThanOrEqual() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n\n      return amount;\n    }),\n        _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n        subjectAmount = _dineroObjects$map2[0],\n        comparatorAmount = _dineroObjects$map2[1];\n\n    return lessThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}\n\nexport function safeLessThanOrEqual(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var lessThanOrEqualFn = unsafeLessThanOrEqual(calculator);\n  return function lessThanOrEqual() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObject = _ref2[0],\n        comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        subjectAmount = _normalizeFn2[0],\n        comparatorAmount = _normalizeFn2[1];\n\n    return lessThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}","import { equal } from './equal';\nimport { lessThan } from './lessThan';\n\n/**\n * Returns a lessThanOrEqual function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The lessThanOrEqual function.\n */\nexport function lessThanOrEqual(calculator) {\n  return function (subject, comparator) {\n    return lessThan(calculator)(subject, comparator) || equal(calculator)(subject, comparator);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { maximum as max } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeMaximum(calculator) {\n  var maxFn = max(calculator);\n  return function maximum() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObjects = _ref[0];\n\n    var _dineroObjects = _slicedToArray(dineroObjects, 1),\n        firstDinero = _dineroObjects[0];\n\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n        currency = _firstDinero$toJSON.currency,\n        scale = _firstDinero$toJSON.scale;\n\n    var amount = maxFn(dineroObjects.map(function (subject) {\n      var _subject$toJSON = subject.toJSON(),\n          subjectAmount = _subject$toJSON.amount;\n\n      return subjectAmount;\n    }));\n    return firstDinero.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\n\nexport function safeMaximum(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var maxFn = unsafeMaximum(calculator);\n  return function maximum() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObjects = _ref2[0];\n    var condition = haveSameCurrency(dineroObjects);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var normalizedDineroObjects = normalizeFn(dineroObjects);\n    return maxFn(normalizedDineroObjects);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { minimum as min } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeMinimum(calculator) {\n  var minFn = min(calculator);\n  return function minimum() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObjects = _ref[0];\n\n    var _dineroObjects = _slicedToArray(dineroObjects, 1),\n        firstDinero = _dineroObjects[0];\n\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n        currency = _firstDinero$toJSON.currency,\n        scale = _firstDinero$toJSON.scale;\n\n    var amount = minFn(dineroObjects.map(function (subject) {\n      var _subject$toJSON = subject.toJSON(),\n          subjectAmount = _subject$toJSON.amount;\n\n      return subjectAmount;\n    }));\n    return firstDinero.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\n\nexport function safeMinimum(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var minFn = unsafeMinimum(calculator);\n  return function maximum() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var dineroObjects = _ref2[0];\n    var condition = haveSameCurrency(dineroObjects);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var normalizedDineroObjects = normalizeFn(dineroObjects);\n    return minFn(normalizedDineroObjects);\n  };\n}","import { greaterThan } from './greaterThan';\n\n/**\n * Returns a minimum function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The minimum function.\n */\nexport function minimum(calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  return function (values) {\n    return values.reduce(function (acc, curr) {\n      return greaterThanFn(acc, curr) ? curr : acc;\n    });\n  };\n}","import { getAmountAndScale } from '../utils';\nimport { transformScale } from './transformScale';\nexport function multiply(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var zero = calculator.zero();\n  return function multiplyFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var multiplicand = _ref[0],\n        multiplier = _ref[1];\n\n    var _multiplicand$toJSON = multiplicand.toJSON(),\n        amount = _multiplicand$toJSON.amount,\n        currency = _multiplicand$toJSON.currency,\n        scale = _multiplicand$toJSON.scale;\n\n    var _getAmountAndScale = getAmountAndScale(multiplier, zero),\n        multiplierAmount = _getAmountAndScale.amount,\n        multiplierScale = _getAmountAndScale.scale;\n\n    var newScale = calculator.add(scale, multiplierScale);\n    return convertScaleFn(multiplicand.create({\n      amount: calculator.multiply(amount, multiplierAmount),\n      currency: currency,\n      scale: newScale\n    }), newScale);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\n\nfunction unsafeSubtract(calculator) {\n  return function subtract() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var minuend = _ref[0],\n        subtrahend = _ref[1];\n\n    var _minuend$toJSON = minuend.toJSON(),\n        minuendAmount = _minuend$toJSON.amount,\n        currency = _minuend$toJSON.currency,\n        scale = _minuend$toJSON.scale;\n\n    var _subtrahend$toJSON = subtrahend.toJSON(),\n        subtrahendAmount = _subtrahend$toJSON.amount;\n\n    var amount = calculator.subtract(minuendAmount, subtrahendAmount);\n    return minuend.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\n\nexport function safeSubtract(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var subtractFn = unsafeSubtract(calculator);\n  return function subtract() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n\n    var minuend = _ref2[0],\n        subtrahend = _ref2[1];\n    var condition = haveSameCurrency([minuend, subtrahend]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n\n    var _normalizeFn = normalizeFn([minuend, subtrahend]),\n        _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n        newMinuend = _normalizeFn2[0],\n        newSubtrahend = _normalizeFn2[1];\n\n    return subtractFn(newMinuend, newSubtrahend);\n  };\n}","export function toUnit(calculator) {\n  return function toUnitFn() {\n    var _options$digits;\n\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        options = _ref[1];\n    var round = (options === null || options === void 0 ? void 0 : options.round) || identity;\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    var power = calculator.power,\n        toNumber = calculator.toNumber;\n    var toUnitFactor = toNumber(power(currency.base, scale));\n    var factor = toNumber(power(currency.base, (_options$digits = options === null || options === void 0 ? void 0 : options.digits) !== null && _options$digits !== void 0 ? _options$digits : scale));\n    return round(toNumber(amount) / toUnitFactor * factor) / factor;\n  };\n}\n\nfunction identity(value) {\n  return value;\n}","import { toUnit } from './toUnit';\nexport function toFormat(calculator) {\n  var toUnitFn = toUnit(calculator);\n  return function toFormatFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0],\n        transformer = _ref[1];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    var amount = toUnitFn(dineroObject, {\n      digits: scale\n    });\n    return transformer({\n      amount: amount,\n      currency: currency,\n      dineroObject: dineroObject\n    });\n  };\n}","import { countTrailingZeros, equal, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function trimScale(calculator) {\n  var countTrailingZerosFn = countTrailingZeros(calculator);\n  var equalFn = equal(calculator);\n  var maximumFn = maximum(calculator);\n  var transformScaleFn = transformScale(calculator);\n  return function trimScaleFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n\n    var dineroObject = _ref[0];\n\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n        amount = _dineroObject$toJSON.amount,\n        currency = _dineroObject$toJSON.currency,\n        scale = _dineroObject$toJSON.scale;\n\n    var base = currency.base,\n        exponent = currency.exponent;\n    var trailingZerosLength = countTrailingZerosFn(amount, base);\n    var difference = calculator.subtract(scale, trailingZerosLength);\n    var newScale = maximumFn([difference, exponent]);\n\n    if (equalFn(newScale, scale)) {\n      return dineroObject;\n    }\n\n    return transformScaleFn(dineroObject, newScale);\n  };\n}","/* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement */\nimport { equal } from './equal';\nexport function countTrailingZeros(calculator) {\n  var equalFn = equal(calculator);\n  return function (input, base) {\n    var zero = calculator.zero();\n    var i = zero;\n    var temp = input;\n\n    while (equalFn(calculator.modulo(temp, base), zero)) {\n      temp = calculator.integerDivide(temp, base);\n      i = calculator.increment(i);\n    }\n\n    return i;\n  };\n}","import { haveSameCurrency as coreHaveSameCurrency } from '@dinero.js/core';\n\n/**\n * Check whether a set of Dinero objects have the same currency.\n *\n * @param dineroObjects - The Dinero objects to compare.\n *\n * @returns Whether the Dinero objects have the same currency.\n */\nexport const haveSameCurrency = coreHaveSameCurrency;\n","import { toSnapshot as coreToSnapshot } from '@dinero.js/core';\n\n/**\n * Get a snapshot of a Dinero object.\n *\n * @param dineroObject - The Dinero object to transform.\n *\n * @returns A snapshot of the object.\n */\nexport const toSnapshot = coreToSnapshot;\n","export function toSnapshot(dineroObject) {\n  return dineroObject.toJSON();\n}","import { add, compare, decrement, increment, integerDivide, modulo, multiply, power, subtract, toNumber, zero } from './api';\nexport var calculator = {\n  add: add,\n  compare: compare,\n  decrement: decrement,\n  increment: increment,\n  integerDivide: integerDivide,\n  modulo: modulo,\n  multiply: multiply,\n  power: power,\n  subtract: subtract,\n  toNumber: toNumber,\n  zero: zero\n};","/* eslint-disable functional/no-expression-statement */\nimport { calculator } from '@dinero.js/calculator-number';\nimport {\n  createDinero,\n  assert,\n  INVALID_AMOUNT_MESSAGE,\n  INVALID_SCALE_MESSAGE,\n} from '@dinero.js/core';\n\n/**\n * Create a Dinero object.\n *\n * @param options.amount - The amount in minor currency units.\n * @param options.currency - The currency.\n * @param options.scale - The number of decimal places to represent.\n *\n * @returns The created Dinero object.\n */\nexport const dinero = createDinero({\n  calculator,\n  onCreate({ amount, scale }) {\n    assert(Number.isInteger(amount), INVALID_AMOUNT_MESSAGE);\n    assert(Number.isInteger(scale), INVALID_SCALE_MESSAGE);\n  },\n});\n","/**\n * Returns the sum of two numbers.\n *\n * @param augend - The number to add to.\n * @param addend - The number to add.\n *\n * @returns The sum of the two numbers.\n */\nexport var add = function add(augend, addend) {\n  return augend + addend;\n};","import { ComparisonOperator } from '@dinero.js/core';\n\n/**\n * Compare two numbers.\n *\n * @param a - The first number to compare.\n * @param b - The second number to compare.\n *\n * @returns Whether the two numbers are equal, or whether the first one is greater or less than the other.\n */\nexport var compare = function compare(a, b) {\n  if (a < b) {\n    return ComparisonOperator.LT;\n  }\n\n  if (a > b) {\n    return ComparisonOperator.GT;\n  }\n\n  return ComparisonOperator.EQ;\n};","/**\n * Returns an decremented number.\n *\n * @param value - The number to decrement.\n *\n * @returns The decremented number.\n */\nexport var decrement = function decrement(value) {\n  return value - 1;\n};","/**\n * Returns an incremented number.\n *\n * @param value - The number to increment.\n *\n * @returns The incremented number.\n */\nexport var increment = function increment(value) {\n  return value + 1;\n};","/**\n * Returns the quotient of two numbers with no fractional part.\n *\n * @param dividend - The number to divide.\n * @param divisor - The number to divide with.\n *\n * @returns The quotient of the two numbers.\n */\nexport var integerDivide = function integerDivide(dividend, divisor) {\n  return Math.trunc(dividend / divisor);\n};","/**\n * Returns the remainder of two numbers.\n *\n * @param dividend - The number to divide.\n * @param divisor - The number to divide with.\n *\n * @returns The remainder of the two numbers.\n */\nexport var modulo = function modulo(dividend, divisor) {\n  return dividend % divisor;\n};","/**\n * Returns the product of two numbers.\n *\n * @param multiplicand - The number to multiply.\n * @param multiplier - The number to multiply with.\n *\n * @returns The product of the two numbers.\n */\nexport var multiply = function multiply(multiplicand, multiplier) {\n  return multiplicand * multiplier;\n};","/**\n * Returns an number to the power of an exponent.\n *\n * @param base - The base number.\n * @param exponent - The exponent to raise the base to.\n *\n * @returns The base to the power of the exponent.\n */\nexport var power = function power(base, exponent) {\n  return Math.pow(base, exponent);\n};","/**\n * Returns the difference between two numbers.\n *\n * @param minuend - The number to subtract from.\n * @param subtrahend - The number to subtract.\n *\n * @returns The difference of the two numbers.\n */\nexport var subtract = function subtract(minuend, subtrahend) {\n  return minuend - subtrahend;\n};","/**\n * Transforms an value to a number.\n *\n * @param input - The value to transform.\n *\n * @returns The transformed value.\n */\nexport var toNumber = function toNumber(input) {\n  return input;\n};","/**\n * Return zero as a number.\n *\n * @returns Zero as a number.\n */\nexport function zero() {\n  return 0;\n}","import { safeAdd } from '@dinero.js/core';\n\nimport type { AddParams } from '@dinero.js/core';\n\n/**\n * Add up the passed Dinero objects.\n *\n * @param augend - The Dinero object to add to.\n * @param addend - The Dinero object to add.\n *\n * @returns A new Dinero object.\n */\nexport function add<TAmount>(...[augend, addend]: AddParams<TAmount>) {\n  const { calculator } = augend;\n  const addFn = safeAdd(calculator);\n\n  return addFn(augend, addend);\n}\n","import { safeAllocate } from '@dinero.js/core';\n\nimport type { AllocateParams } from '@dinero.js/core';\n\n/**\n * Distribute the amount of a Dinero object across a list of ratios.\n *\n * @param dineroObject - The Dinero object to allocate from.\n * @param ratios - The ratios to allocate the amount to.\n *\n * @returns A new Dinero object.\n */\nexport function allocate<TAmount>(\n  ...[dineroObject, ratios]: AllocateParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const allocateFn = safeAllocate(calculator);\n\n  return allocateFn(dineroObject, ratios);\n}\n","import { safeCompare } from '@dinero.js/core';\n\nimport type { CompareParams } from '@dinero.js/core';\n\n/**\n * Compare the value of a Dinero object relative to another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns One of -1, 0, or 1 depending on whether the first Dinero object is less than, equal to, or greater than the other.\n */\nexport function compare<TAmount>(\n  ...[dineroObject, comparator]: CompareParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const compareFn = safeCompare(calculator);\n\n  return compareFn(dineroObject, comparator);\n}\n","import { convert as coreConvert } from '@dinero.js/core';\n\nimport type { ConvertParams } from '@dinero.js/core';\n\n/**\n * Convert a Dinero object to another currency.\n *\n * @param dineroObject - The Dinero object to format.\n * @param newCurrency - The currency to convert to.\n * @param rates - The rates to convert with.\n *\n * @returns A converted Dinero object.\n */\nexport function convert<TAmount>(\n  ...[dineroObject, newCurrency, rates]: ConvertParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const converter = coreConvert(calculator);\n\n  return converter(dineroObject, newCurrency, rates);\n}\n","/**\n * Round a number down.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var down = function down(value) {\n  return Math.floor(value);\n};","import { equal as coreEqual } from '@dinero.js/core';\n\nimport type { EqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is equal to another.\n *\n * @param dineroObject - The first Dinero object to compare.\n * @param comparator - The second Dinero object to compare.\n *\n * @returns Whether the Dinero objects are equal.\n */\nexport function equal<TAmount>(\n  ...[dineroObject, comparator]: EqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const equalFn = coreEqual(calculator);\n\n  return equalFn(dineroObject, comparator);\n}\n","import { safeGreaterThan } from '@dinero.js/core';\n\nimport type { GreaterThanParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is greater than another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is greater than the other.\n */\nexport function greaterThan<TAmount>(\n  ...[dineroObject, comparator]: GreaterThanParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const greaterThanFn = safeGreaterThan(calculator);\n\n  return greaterThanFn(dineroObject, comparator);\n}\n","import { safeGreaterThanOrEqual } from '@dinero.js/core';\n\nimport type { GreaterThanOrEqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is greater than or equal another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is greater than or equal the other.\n */\nexport function greaterThanOrEqual<TAmount>(\n  ...[dineroObject, comparator]: GreaterThanOrEqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const greaterThanOrEqualFn = safeGreaterThanOrEqual(calculator);\n\n  return greaterThanOrEqualFn(dineroObject, comparator);\n}\n","import { isHalf } from '../utils';\n\n/**\n * Round a number with half values to nearest integer farthest from zero.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfAwayFromZero = function halfAwayFromZero(value) {\n  return isHalf(value) ? Math.sign(value) * Math.ceil(Math.abs(value)) : Math.round(value);\n};","import { isHalf } from '../utils';\n\n/**\n * Round a number with half values down.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfDown = function halfDown(value) {\n  return isHalf(value) ? Math.floor(value) : Math.round(value);\n};","import { isEven, isHalf } from '../utils';\n\n/**\n * Round a number with half values to nearest even integer.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfEven = function halfEven(value) {\n  var rounded = Math.round(value);\n\n  if (!isHalf(value)) {\n    return rounded;\n  }\n\n  return isEven(rounded) ? rounded : rounded - 1;\n};","import { isEven, isHalf } from '../utils';\n\n/**\n * Round a number with half values to nearest odd integer.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfOdd = function halfOdd(value) {\n  var rounded = Math.round(value);\n\n  if (!isHalf(value)) {\n    return rounded;\n  }\n\n  return isEven(rounded) ? rounded - 1 : rounded;\n};","import { isHalf } from '../utils';\n\n/**\n * Round a number with half values to nearest integer closest to zero.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfTowardsZero = function halfTowardsZero(value) {\n  return isHalf(value) ? Math.sign(value) * Math.floor(Math.abs(value)) : Math.round(value);\n};","/**\n * Round a number with half values up.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var halfUp = function halfUp(value) {\n  return Math.round(value);\n};","import { hasSubUnits as coreHasSubUnits } from '@dinero.js/core';\n\nimport type { HasSubUnitsParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object has minor currency units.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object has minor currency units.\n */\nexport function hasSubUnits<TAmount>(\n  ...[dineroObject]: HasSubUnitsParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const hasSubUnitsFn = coreHasSubUnits(calculator);\n\n  return hasSubUnitsFn(dineroObject);\n}\n","import { haveSameAmount as coreHaveSameAmount } from '@dinero.js/core';\n\nimport type { HaveSameAmountParams } from '@dinero.js/core';\n\n/**\n * Check whether a set of Dinero objects have the same amount.\n *\n * @param dineroObjects - The Dinero objects to compare.\n *\n * @returns Whether the Dinero objects have the same amount.\n */\nexport function haveSameAmount<TAmount>(\n  ...[dineroObjects]: HaveSameAmountParams<TAmount>\n) {\n  const { calculator } = dineroObjects[0];\n  const haveSameAmountFn = coreHaveSameAmount(calculator);\n\n  return haveSameAmountFn(dineroObjects);\n}\n","import { isNegative as coreIsNegative } from '@dinero.js/core';\n\nimport type { IsNegativeParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object is negative.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object is negative.\n */\nexport function isNegative<TAmount>(\n  ...[dineroObject]: IsNegativeParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const isNegativeFn = coreIsNegative(calculator);\n\n  return isNegativeFn(dineroObject);\n}\n","import { isPositive as coreIsPositive } from '@dinero.js/core';\n\nimport type { IsPositiveParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object is positive.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object is positive.\n */\nexport function isPositive<TAmount>(\n  ...[dineroObject]: IsPositiveParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const isPositiveFn = coreIsPositive(calculator);\n\n  return isPositiveFn(dineroObject);\n}\n","import { isZero as coreIsZero } from '@dinero.js/core';\n\nimport type { IsZeroParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is zero.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the value of a Dinero object is zero.\n */\nexport function isZero<TAmount>(...[dineroObject]: IsZeroParams<TAmount>) {\n  const { calculator } = dineroObject;\n  const isZeroFn = coreIsZero(calculator);\n\n  return isZeroFn(dineroObject);\n}\n","import { safeLessThan } from '@dinero.js/core';\n\nimport type { LessThanParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is lesser than another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is lesser than the other.\n */\nexport function lessThan<TAmount>(\n  ...[dineroObject, comparator]: LessThanParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const lessThanFn = safeLessThan(calculator);\n\n  return lessThanFn(dineroObject, comparator);\n}\n","import { safeLessThanOrEqual } from '@dinero.js/core';\n\nimport type { LessThanOrEqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is lesser than or equal to another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is lesser than or equal to the other.\n */\nexport function lessThanOrEqual<TAmount>(\n  ...[dineroObject, comparator]: LessThanOrEqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const lessThanOrEqualFn = safeLessThanOrEqual(calculator);\n\n  return lessThanOrEqualFn(dineroObject, comparator);\n}\n","import { safeMaximum } from '@dinero.js/core';\n\nimport type { MaximumParams } from '@dinero.js/core';\n\n/**\n * Get the greatest of the passed Dinero objects.\n *\n * @param dineroObjects - The Dinero objects to maximum.\n *\n * @returns A new Dinero object.\n */\nexport function maximum<TAmount>(...[dineroObjects]: MaximumParams<TAmount>) {\n  const { calculator } = dineroObjects[0];\n  const maximumFn = safeMaximum(calculator);\n\n  return maximumFn(dineroObjects);\n}\n","import { safeMinimum } from '@dinero.js/core';\n\nimport type { MinimumParams } from '@dinero.js/core';\n\n/**\n * Get the lowest of the passed Dinero objects.\n *\n * @param dineroObjects - The Dinero objects to minimum.\n *\n * @returns A new Dinero object.\n */\nexport function minimum<TAmount>(...[dineroObjects]: MinimumParams<TAmount>) {\n  const { calculator } = dineroObjects[0];\n  const minimumFn = safeMinimum(calculator);\n\n  return minimumFn(dineroObjects);\n}\n","import { multiply as coreMultiply } from '@dinero.js/core';\n\nimport type { MultiplyParams } from '@dinero.js/core';\n\n/**\n * Multiply the passed Dinero object.\n *\n * @param multiplicand - The Dinero object to multiply.\n * @param multiplier - The number to multiply with.\n *\n * @returns A new Dinero object.\n */\nexport function multiply<TAmount>(\n  ...[multiplicand, multiplier]: MultiplyParams<TAmount>\n) {\n  const { calculator } = multiplicand;\n  const multiplyFn = coreMultiply(calculator);\n\n  return multiplyFn(multiplicand, multiplier);\n}\n","import { normalizeScale as coreNormalizeScale } from '@dinero.js/core';\n\nimport type { NormalizeScaleParams } from '@dinero.js/core';\n\n/**\n * Normalize a set of Dinero objects to the highest scale of the set.\n *\n * @param dineroObjects - The Dinero objects to normalize.\n *\n * @returns A new set of Dinero objects.\n */\nexport function normalizeScale<TAmount>(\n  ...[dineroObjects]: NormalizeScaleParams<TAmount>\n) {\n  const { calculator } = dineroObjects[0];\n  const normalizeScaleFn = coreNormalizeScale(calculator);\n\n  return normalizeScaleFn(dineroObjects);\n}\n","import { safeSubtract } from '@dinero.js/core';\n\nimport type { SubtractParams } from '@dinero.js/core';\n\n/**\n * Subtract the passed Dinero objects.\n *\n * @param minuend - The Dinero object to subtract from.\n * @param subtrahend - The Dinero object to subtract.\n *\n * @returns A new Dinero object.\n */\nexport function subtract<TAmount>(\n  ...[minuend, subtrahend]: SubtractParams<TAmount>\n) {\n  const { calculator } = minuend;\n  const subtractFn = safeSubtract(calculator);\n\n  return subtractFn(minuend, subtrahend);\n}\n","import { toFormat as coreToFormat } from '@dinero.js/core';\n\nimport type { ToFormatParams } from '@dinero.js/core';\n\n/**\n * Format a Dinero object with a custom transformer.\n *\n * @param dineroObject - The Dinero object to format.\n * @param transformer - A transformer function.\n *\n * @returns The object as a formatted string.\n */\nexport function toFormat<TAmount>(\n  ...[dineroObject, transformer]: ToFormatParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const formatter = coreToFormat(calculator);\n\n  return formatter(dineroObject, transformer);\n}\n","import { toUnit as coreToUnit } from '@dinero.js/core';\n\nimport type { ToUnitParams } from '@dinero.js/core';\n\n/**\n * Get the amount of a Dinero object in units.\n *\n * @param dineroObject - The Dinero object to transform.\n * @param options.digits - The number of fraction digits to round to.\n * @param options.round - The rounding function to use.\n *\n * @returns The amount in units.\n */\nexport function toUnit<TAmount>(\n  ...[dineroObject, options]: ToUnitParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const toUnitFn = coreToUnit(calculator);\n\n  return toUnitFn(dineroObject, options);\n}\n","import { transformScale as coreTransformScale } from '@dinero.js/core';\n\nimport type { TransformScaleParams } from '@dinero.js/core';\n\n/**\n * Transform a Dinero object to a new scale.\n *\n * @param dineroObject - The Dinero object to transform.\n * @param newScale - The new scale.\n *\n * @returns A new Dinero object.\n */\nexport function transformScale<TAmount>(\n  ...[dineroObject, newScale]: TransformScaleParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const transformScaleFn = coreTransformScale(calculator);\n\n  return transformScaleFn(dineroObject, newScale);\n}\n","import { trimScale as coreTrimScale } from '@dinero.js/core';\n\nimport type { TrimScaleParams } from '@dinero.js/core';\n\n/**\n * Trim a Dinero object's scale as much as possible, down to the currency exponent.\n *\n * @param dineroObject - The Dinero object which scale to trim.\n *\n * @returns A new Dinero object.\n */\nexport function trimScale<TAmount>(\n  ...[dineroObject]: TrimScaleParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const trimScaleFn = coreTrimScale(calculator);\n\n  return trimScaleFn(dineroObject);\n}\n","/**\n * Round a number up.\n *\n * @param value - The number to round.\n *\n * @returns The rounded number.\n */\nexport var up = function up(value) {\n  return Math.ceil(value);\n};"],"names":["ComparisonOperator","INVALID_RATIOS_MESSAGE","UNEQUAL_CURRENCIES_MESSAGE","assert","condition","message","Error","concat","createDinero","_ref","calculator","onCreate","dinero","_ref2","amount","currency","_ref2$scale","scale","exponent","create","toJSON","equal","subject","comparator","compare","EQ","greaterThan","GT","greaterThanOrEqual","lessThan","LT","distribute","value","ratios","equalFn","greaterThanFn","lessThanFn","greaterThanOrEqualFn","zero","one","increment","total","reduce","a","b","add","remainder","shares","map","ratio","share","integerDivide","multiply","subtract","isPositive","decrement","i","getAmountAndScale","_value$scale","hasOwnProperty","isEven","isHalf","Math","abs","maximum","values","acc","curr","_toArray","arr","Array","isArray","_arrayWithHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","length","arr2","haveSameCurrency","dineroObjects","_dineroObjects","firstDinero","otherDineros","every","d","code","base","transformScale","_len","arguments","_key","dineroObject","newScale","_dineroObject$toJSON","isNewScaleLarger","operation","terms","factor","power","apply","normalizeScale","maximumFn","convertScaleFn","highestScale","highest","current","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","safeAdd","normalizeFn","addFn","augend","addend","_augend$toJSON","augendAmount","addendAmount","unsafeAdd","_len2","_key2","_normalizeFn","_normalizeFn2","newAugend","newAddend","safeAllocate","allocateFn","distributeFn","unsafeAllocate","ten","fill","hasRatios","scaledRatios","highestRatioScale","_ref3","normalizedRatios","_ref4","hasOnlyPositiveRatios","_ref5","hasOneNonZeroRatio","some","_ref6","_dineroObject$toJSON2","safeCompare","compareFn","cmp","_dineroObjects$map2","subjectAmount","comparatorAmount","unsafeCompare","convert","newCurrency","rates","rate","_getAmountAndScale","rateAmount","rateScale","haveSameAmount","_firstDinero$toJSON","safeGreaterThan","gt","unsafeGreaterThan","safeGreaterThanOrEqual","gte","unsafeGreaterThanOrEqual","hasSubUnits","modulo","isNegative","isZero","safeLessThan","lt","unsafeLessThan","unsafeLessThanOrEqual","lessThanOrEqualFn","lte","_dineroObjects$map","safeLessThanOrEqual","safeMaximum","maxFn","max","unsafeMaximum","normalizedDineroObjects","unsafeMinimum","minFn","min","safeMinimum","multiplicand","multiplier","_multiplicand$toJSON","multiplierAmount","multiplierScale","safeSubtract","subtractFn","minuend","subtrahend","_minuend$toJSON","minuendAmount","subtrahendAmount","unsafeSubtract","newMinuend","newSubtrahend","toUnit","_options$digits","options","round","identity","toNumber","toUnitFactor","digits","toFormat","toUnitFn","transformer","trimScale","countTrailingZerosFn","input","temp","countTrailingZeros","transformScaleFn","trailingZerosLength","difference","coreHaveSameCurrency","toSnapshot","dividend","divisor","trunc","pow","Number","isInteger","converter","coreConvert","floor","coreEqual","sign","ceil","rounded","hasSubUnitsFn","coreHasSubUnits","haveSameAmountFn","coreHaveSameAmount","isNegativeFn","coreIsNegative","isPositiveFn","coreIsPositive","isZeroFn","coreIsZero","minimumFn","multiplyFn","coreMultiply","normalizeScaleFn","coreNormalizeScale","formatter","coreToFormat","coreToUnit","coreTransformScale","trimScaleFn","coreTrimScale"],"mappings":"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"}